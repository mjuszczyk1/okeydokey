extends layout

block content
    .row
        .col-md-6.col-md-offset-3
            div.well
                p This form will make an ajax call and then display the artist's ID if it finds one
                p If it can't find one, it will simply say "No artist found"
                p For example, Danny Brown's ID is: 7aA592KWirLsnfb5ulGWvU
            form#artistSearch
                div.form-group
                    label(for='searchArtist') Artist:
                    input#searchArtist.form-control(type='text', placeholder='Danny Brown' name='searchArtist')
                button.btn.btn-primary(type='submit') Submit
            h1#artistId
            hr/
    .row
        .col-md-6.col-md-offset-3
            div.well
                p This form takes an artist and will return all the albums for the first related artist.
                p I'm not sure what this can be used for in the future, this is just an exercise in AJAX/Spotify API
                p For example, Danny Brown's top related artist is Freddie Gibbs, so return Freddie Gibss' albums.
            form#longerRequest
                div.form-group
                    label(for='searchRelatedAlbums') Artist:
                    input#searchRelatedAlbums.form-control(type='text' placeholder='Danny Brown' name="searchRelatedAlbums")
                button.btn.btn-primary(type='submit') Submit
            div#relatedAlbums
                h1#mostRelatedArtist
                ul#albumList
            hr/
    .row
        .col-md-6.col-md-offset-3
            div.well
                p For this form, we'll take an artist name and return links to clips of songs from their most recent album.
                p For example, Danny Brown will return previews for the Atrocity Album.
            form#playPreviews
                div.form-group
                    label(for='artistPreview') Artist:
                    input#artistPreview.form-control(type='text' placeholder='Danny Brown' name='artistPreview')
                button.btn.btn-primary(type='submit') Submit
            ul#songPreviews

block scripts
    script.
        (($) => {
            //- Let's make a function to display song titles for the preview form:
            function buildSongPreview(albumObject) {
                const ele = $('#songPreviews'),
                      old = $('#songPreviews li');
                let audioObject = null;
                old.remove();
                for (let i = 0; i < albumObject.total; i++) {
                    console.log("ID: " + albumObject.items[i].id);
                    ele.append("<li><a data-preview-url=\"" + albumObject.items[i].preview_url + "\" data-song-id=\"" + albumObject.items[i].id + "\" class='song-clip-link'>" + albumObject.items[i].name + "</a></li>");
                }
            }

            //--------------- AJAX CALLS ----------------------//
            $('#artistSearch').submit((e) => {
                e.preventDefault();
                const searchParams = {artist: $('#searchArtist').val()};
                $.get('/spotify/out/getArtistId', searchParams, (data) => {
                    $('#artistId').text(data)
                });
            });
            $('#longerRequest').submit((e) => {
                e.preventDefault();
                const searchParams = {artist: $('#searchRelatedAlbums').val()};
                $.get('/spotify/out/getRelatedAlbums', searchParams, (data) => {
                    $('#mostRelatedArtist').text(data.shift());
                    const albumList = $('#albumList'),
                          oldAlbums = $('#albumList li');
                    oldAlbums.remove();
                    $.each(data, (i) => {
                        albumList.append("<li>" + data[i] + "</li>");
                    });
                });
            });
            $('#playPreviews').submit((e) => {
                e.preventDefault();
                const searchParams = {artist: $('#artistPreview').val()};
                $.get('/spotify/out/playPreviews', searchParams, (data) => {
                    buildSongPreview(data);
                    
                });
            });
            
            
        })(jQuery);